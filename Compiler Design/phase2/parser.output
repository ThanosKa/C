State 171 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmtp
    2        | /* empty */

    3 stmtp: stmt
    4      | stmtp stmt
    5      | error

    6 stmt: expr SEMICOLON
    7     | ifstmt
    8     | whilestmt
    9     | forstmt
   10     | returnstmt
   11     | BREAK SEMICOLON
   12     | CONTINUE SEMICOLON
   13     | block
   14     | funcdef
   15     | warning
   16     | string_comment_error
   17     | comment
   18     | SEMICOLON

   19 @1: /* empty */

   20 expr: assignexpr @1
   21     | expr ADD expr
   22     | expr ADD ASSIGNMENT expr
   23     | expr SUB expr
   24     | expr SHARP expr
   25     | expr PERCENT expr
   26     | expr SLASH expr
   27     | expr GREATER expr
   28     | expr GREATER_OR_EQUAL expr
   29     | expr LESS expr
   30     | expr LESS_OR_EQUAL expr
   31     | expr EQUAL expr
   32     | expr NOT_EQUAL expr
   33     | expr AND expr
   34     | expr OR expr
   35     | term

   36 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES
   37     | SUB expr
   38     | NOT expr
   39     | PLUS_PLUS lvalue
   40     | lvalue PLUS_PLUS
   41     | MINUS_MINUS lvalue
   42     | lvalue MINUS_MINUS
   43     | primary

   44 @2: /* empty */

   45 assignexpr: lvalue @2 ASSIGNMENT expr

   46 primary: lvalue
   47        | call
   48        | objectdef
   49        | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES
   50        | const

   51 lvalue: ID
   52       | LOCAL_KEYWORD ID
   53       | DOUBLE_COLON ID
   54       | member

   55 member: lvalue DOT ID

   56 @3: /* empty */

   57 member: lvalue @3 LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   58       | call DOT ID
   59       | call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

   60 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES

   61 @4: /* empty */

   62 call: lvalue @4 callsuffix
   63     | LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

   64 callsuffix: normcall
   65           | methodcall

   66 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES
   67         | ID LEFT_PARENTHESES expr RIGHT_PARENTHESES
   68         | ID LEFT_PARENTHESES elist COMMA expr RIGHT_PARENTHESES
   69         | ID LEFT_PARENTHESES RIGHT_PARENTHESES

   70 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

   71 elist: expr
   72      | elist COMMA expr
   73      | /* empty */

   74 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET
   75          | LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET

   76 indexed: indexedelem
   77        | indexed COMMA indexedelem

   78 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET

   79 @5: /* empty */

   80 @6: /* empty */

   81 block: LEFT_CURLY_BRACKET @5 RIGHT_CURLY_BRACKET @6

   82 @7: /* empty */

   83 @8: /* empty */

   84 block: LEFT_CURLY_BRACKET @7 stmtp RIGHT_CURLY_BRACKET @8

   85 @9: /* empty */

   86 @10: /* empty */

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 idlist RIGHT_PARENTHESES @10 block

   88 @11: /* empty */

   89 @12: /* empty */

   90 @13: /* empty */

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 block

   92 const: INTEGER
   93      | REAL
   94      | STRING
   95      | NIL
   96      | TRUE
   97      | FALSE

   98 @14: /* empty */

   99 idlist: ID @14 idlist_case_commaid
  100       | /* empty */

  101 idlist_case_commaid: idlist_case_commaid COMMA ID
  102                    | /* empty */

  103 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt
  104       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt

  105 whilestmt: WHILE LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt

  106 @15: /* empty */

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt

  108 returnstmt: RETURN expr SEMICOLON
  109           | RETURN SEMICOLON

  110 comment: LINE_COMMENT
  111        | MULTI_COMMENT
  112        | NESTED_INSIDE_MULTI_COMMENT

  113 warning: WARNING_STRING

  114 string_comment_error: MULTI_COMMENT_NEVER_CLOSED
  115                     | STRING_NEVER_CLOSED


Terminals, with rules where they appear

$end (0) 0
error (256) 5
INTEGER (258) 92
REAL (259) 93
ID (260) 51 52 53 55 58 67 68 69 70 91 99 101
STRING (261) 94
MULTI_COMMENT (262) 111
MULTI_COMMENT_NEVER_CLOSED (263) 114
NESTED_INSIDE_MULTI_COMMENT (264) 112
STRING_NEVER_CLOSED (265) 115
WARNING_STRING (266) 113
ASSIGNMENT (267) 22 45
ADD (268) 21 22
SUB (269) 23 37
SHARP (270) 24
SLASH (271) 26
PERCENT (272) 25
EQUAL (273) 31
NOT_EQUAL (274) 32
PLUS_PLUS (275) 39 40
MINUS_MINUS (276) 41 42
LESS (277) 29
GREATER (278) 27
GREATER_OR_EQUAL (279) 28
LESS_OR_EQUAL (280) 30
LEFT_CURLY_BRACKET (281) 78 81 84
RIGHT_CURLY_BRACKET (282) 78 81 84
LEFT_SQUARE_BRACKET (283) 57 59 74 75
RIGHT_SQUARE_BRACKET (284) 57 59 74 75
LEFT_PARENTHESES (285) 36 49 60 63 66 67 68 69 70 87 91 103 104 105
    107
RIGHT_PARENTHESES (286) 36 49 60 63 66 67 68 69 70 87 91 103 104 105
    107
SEMICOLON (287) 6 11 12 18 107 108 109
COMMA (288) 68 72 77 101
COLON (289) 78
DOUBLE_COLON (290) 53
DOT (291) 55 58
DOUBLE_DOT (292) 70
IF (293) 103 104
ELSE (294) 104
WHILE (295) 105
FOR (296) 107
FUNCTION (297) 87 91
RETURN (298) 108 109
BREAK (299) 11
CONTINUE (300) 12
AND (301) 33
NOT (302) 38
OR (303) 34
LOCAL_KEYWORD (304) 52
TRUE (305) 96
FALSE (306) 97
NIL (307) 95
LINE_COMMENT (308) 110


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
stmtp (56)
    on left: 3 4 5, on right: 1 4 84
stmt (57)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 3 4 103
    104 105 107
expr (58)
    on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35,
    on right: 6 21 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38
    45 57 59 67 68 71 72 78 103 104 105 107 108
@1 (59)
    on left: 19, on right: 20
term (60)
    on left: 36 37 38 39 40 41 42 43, on right: 35
assignexpr (61)
    on left: 45, on right: 20
@2 (62)
    on left: 44, on right: 45
primary (63)
    on left: 46 47 48 49 50, on right: 43
lvalue (64)
    on left: 51 52 53 54, on right: 39 40 41 42 45 46 55 57 62
member (65)
    on left: 55 57 58 59, on right: 54
@3 (66)
    on left: 56, on right: 57
call (67)
    on left: 60 62 63, on right: 47 58 59 60
@4 (68)
    on left: 61, on right: 62
callsuffix (69)
    on left: 64 65, on right: 62
normcall (70)
    on left: 66 67 68 69, on right: 64
methodcall (71)
    on left: 70, on right: 65
elist (72)
    on left: 71 72 73, on right: 60 63 66 68 70 72 74 107
objectdef (73)
    on left: 74 75, on right: 48
indexed (74)
    on left: 76 77, on right: 75 77
indexedelem (75)
    on left: 78, on right: 76 77
block (76)
    on left: 81 84, on right: 13 87 91
@5 (77)
    on left: 79, on right: 81
@6 (78)
    on left: 80, on right: 81
@7 (79)
    on left: 82, on right: 84
@8 (80)
    on left: 83, on right: 84
funcdef (81)
    on left: 87 91, on right: 14 49 63
@9 (82)
    on left: 85, on right: 87
@10 (83)
    on left: 86, on right: 87
@11 (84)
    on left: 88, on right: 91
@12 (85)
    on left: 89, on right: 91
@13 (86)
    on left: 90, on right: 91
const (87)
    on left: 92 93 94 95 96 97, on right: 50
idlist (88)
    on left: 99 100, on right: 87 91
@14 (89)
    on left: 98, on right: 99
idlist_case_commaid (90)
    on left: 101 102, on right: 99 101
ifstmt (91)
    on left: 103 104, on right: 7
whilestmt (92)
    on left: 105, on right: 8
forstmt (93)
    on left: 107, on right: 9
@15 (94)
    on left: 106, on right: 107
returnstmt (95)
    on left: 108 109, on right: 10
comment (96)
    on left: 110 111 112, on right: 17
warning (97)
    on left: 113, on right: 15
string_comment_error (98)
    on left: 114 115, on right: 16


state 0

    0 $accept: . program $end

    error                        shift, and go to state 1
    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    $end  reduce using rule 2 (program)

    program               go to state 32
    stmtp                 go to state 33
    stmt                  go to state 34
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 1

    5 stmtp: error .

    $default  reduce using rule 5 (stmtp)


state 2

   92 const: INTEGER .

    $default  reduce using rule 92 (const)


state 3

   93 const: REAL .

    $default  reduce using rule 93 (const)


state 4

   51 lvalue: ID .

    $default  reduce using rule 51 (lvalue)


state 5

   94 const: STRING .

    $default  reduce using rule 94 (const)


state 6

  111 comment: MULTI_COMMENT .

    $default  reduce using rule 111 (comment)


state 7

  114 string_comment_error: MULTI_COMMENT_NEVER_CLOSED .

    $default  reduce using rule 114 (string_comment_error)


state 8

  112 comment: NESTED_INSIDE_MULTI_COMMENT .

    $default  reduce using rule 112 (comment)


state 9

  115 string_comment_error: STRING_NEVER_CLOSED .

    $default  reduce using rule 115 (string_comment_error)


state 10

  113 warning: WARNING_STRING .

    $default  reduce using rule 113 (warning)


state 11

   37 term: SUB . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 53
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 12

   39 term: PLUS_PLUS . lvalue

    ID                shift, and go to state 4
    LEFT_PARENTHESES  shift, and go to state 54
    DOUBLE_COLON      shift, and go to state 18
    LOCAL_KEYWORD     shift, and go to state 27

    lvalue  go to state 55
    member  go to state 40
    call    go to state 56


state 13

   41 term: MINUS_MINUS . lvalue

    ID                shift, and go to state 4
    LEFT_PARENTHESES  shift, and go to state 54
    DOUBLE_COLON      shift, and go to state 18
    LOCAL_KEYWORD     shift, and go to state 27

    lvalue  go to state 57
    member  go to state 40
    call    go to state 56


state 14

   81 block: LEFT_CURLY_BRACKET . @5 RIGHT_CURLY_BRACKET @6
   84      | LEFT_CURLY_BRACKET . @7 stmtp RIGHT_CURLY_BRACKET @8

    RIGHT_CURLY_BRACKET  reduce using rule 79 (@5)
    $default             reduce using rule 82 (@7)

    @5  go to state 58
    @7  go to state 59


state 15

   74 objectdef: LEFT_SQUARE_BRACKET . elist RIGHT_SQUARE_BRACKET
   75          | LEFT_SQUARE_BRACKET . indexed RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_CURLY_BRACKET   shift, and go to state 60
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr         go to state 61
    term         go to state 36
    assignexpr   go to state 37
    primary      go to state 38
    lvalue       go to state 39
    member       go to state 40
    call         go to state 41
    elist        go to state 62
    objectdef    go to state 42
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 45


state 16

   36 term: LEFT_PARENTHESES . expr RIGHT_PARENTHESES
   49 primary: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES
   63 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    FUNCTION             shift, and go to state 22
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 65
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    funcdef     go to state 66
    const       go to state 45


state 17

   18 stmt: SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 18

   53 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 67


state 19

  103 ifstmt: IF . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt
  104       | IF . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt

    LEFT_PARENTHESES  shift, and go to state 68


state 20

  105 whilestmt: WHILE . LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt

    LEFT_PARENTHESES  shift, and go to state 69


state 21

  107 forstmt: FOR . LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt

    LEFT_PARENTHESES  shift, and go to state 70


state 22

   87 funcdef: FUNCTION . LEFT_PARENTHESES @9 idlist RIGHT_PARENTHESES @10 block
   91        | FUNCTION . ID @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 block

    ID                shift, and go to state 71
    LEFT_PARENTHESES  shift, and go to state 72


state 23

  108 returnstmt: RETURN . expr SEMICOLON
  109           | RETURN . SEMICOLON

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    SEMICOLON            shift, and go to state 73
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 74
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 24

   11 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 75


state 25

   12 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 76


state 26

   38 term: NOT . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 77
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 27

   52 lvalue: LOCAL_KEYWORD . ID

    ID  shift, and go to state 78


state 28

   96 const: TRUE .

    $default  reduce using rule 96 (const)


state 29

   97 const: FALSE .

    $default  reduce using rule 97 (const)


state 30

   95 const: NIL .

    $default  reduce using rule 95 (const)


state 31

  110 comment: LINE_COMMENT .

    $default  reduce using rule 110 (comment)


state 32

    0 $accept: program . $end

    $end  shift, and go to state 79


state 33

    1 program: stmtp .
    4 stmtp: stmtp . stmt

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    $default  reduce using rule 1 (program)

    stmt                  go to state 80
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 34

    3 stmtp: stmt .

    $default  reduce using rule 3 (stmtp)


state 35

    6 stmt: expr . SEMICOLON
   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    SEMICOLON         shift, and go to state 92
    AND               shift, and go to state 93
    OR                shift, and go to state 94


state 36

   35 expr: term .

    $default  reduce using rule 35 (expr)


state 37

   20 expr: assignexpr . @1

    $default  reduce using rule 19 (@1)

    @1  go to state 95


state 38

   43 term: primary .

    $default  reduce using rule 43 (term)


state 39

   40 term: lvalue . PLUS_PLUS
   42     | lvalue . MINUS_MINUS
   45 assignexpr: lvalue . @2 ASSIGNMENT expr
   46 primary: lvalue .
   55 member: lvalue . DOT ID
   57       | lvalue . @3 LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   62 call: lvalue . @4 callsuffix

    PLUS_PLUS    shift, and go to state 96
    MINUS_MINUS  shift, and go to state 97
    DOT          shift, and go to state 98

    ID                   reduce using rule 61 (@4)
    ASSIGNMENT           reduce using rule 44 (@2)
    LEFT_SQUARE_BRACKET  reduce using rule 56 (@3)
    LEFT_PARENTHESES     reduce using rule 61 (@4)
    DOUBLE_DOT           reduce using rule 61 (@4)
    $default             reduce using rule 46 (primary)

    @2  go to state 99
    @3  go to state 100
    @4  go to state 101


state 40

   54 lvalue: member .

    $default  reduce using rule 54 (lvalue)


state 41

   47 primary: call .
   58 member: call . DOT ID
   59       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   60 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 102
    LEFT_PARENTHESES     shift, and go to state 103
    DOT                  shift, and go to state 104

    $default  reduce using rule 47 (primary)


state 42

   48 primary: objectdef .

    $default  reduce using rule 48 (primary)


state 43

   13 stmt: block .

    $default  reduce using rule 13 (stmt)


state 44

   14 stmt: funcdef .

    $default  reduce using rule 14 (stmt)


state 45

   50 primary: const .

    $default  reduce using rule 50 (primary)


state 46

    7 stmt: ifstmt .

    $default  reduce using rule 7 (stmt)


state 47

    8 stmt: whilestmt .

    $default  reduce using rule 8 (stmt)


state 48

    9 stmt: forstmt .

    $default  reduce using rule 9 (stmt)


state 49

   10 stmt: returnstmt .

    $default  reduce using rule 10 (stmt)


state 50

   17 stmt: comment .

    $default  reduce using rule 17 (stmt)


state 51

   15 stmt: warning .

    $default  reduce using rule 15 (stmt)


state 52

   16 stmt: string_comment_error .

    $default  reduce using rule 16 (stmt)


state 53

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   37 term: SUB expr .

    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    $default  reduce using rule 37 (term)


state 54

   63 call: LEFT_PARENTHESES . funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    FUNCTION  shift, and go to state 22

    funcdef  go to state 105


state 55

   39 term: PLUS_PLUS lvalue .
   55 member: lvalue . DOT ID
   57       | lvalue . @3 LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   62 call: lvalue . @4 callsuffix

    DOT  shift, and go to state 98

    ID                   reduce using rule 61 (@4)
    LEFT_SQUARE_BRACKET  reduce using rule 56 (@3)
    LEFT_PARENTHESES     reduce using rule 61 (@4)
    DOUBLE_DOT           reduce using rule 61 (@4)
    $default             reduce using rule 39 (term)

    @3  go to state 100
    @4  go to state 101


state 56

   58 member: call . DOT ID
   59       | call . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   60 call: call . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_SQUARE_BRACKET  shift, and go to state 102
    LEFT_PARENTHESES     shift, and go to state 103
    DOT                  shift, and go to state 104


state 57

   41 term: MINUS_MINUS lvalue .
   55 member: lvalue . DOT ID
   57       | lvalue . @3 LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET
   62 call: lvalue . @4 callsuffix

    DOT  shift, and go to state 98

    ID                   reduce using rule 61 (@4)
    LEFT_SQUARE_BRACKET  reduce using rule 56 (@3)
    LEFT_PARENTHESES     reduce using rule 61 (@4)
    DOUBLE_DOT           reduce using rule 61 (@4)
    $default             reduce using rule 41 (term)

    @3  go to state 100
    @4  go to state 101


state 58

   81 block: LEFT_CURLY_BRACKET @5 . RIGHT_CURLY_BRACKET @6

    RIGHT_CURLY_BRACKET  shift, and go to state 106


state 59

   84 block: LEFT_CURLY_BRACKET @7 . stmtp RIGHT_CURLY_BRACKET @8

    error                        shift, and go to state 1
    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmtp                 go to state 107
    stmt                  go to state 34
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 60

   78 indexedelem: LEFT_CURLY_BRACKET . expr COLON expr RIGHT_CURLY_BRACKET

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 108
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 61

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   71 elist: expr .

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    AND               shift, and go to state 93
    OR                shift, and go to state 94

    $default  reduce using rule 71 (elist)


state 62

   72 elist: elist . COMMA expr
   74 objectdef: LEFT_SQUARE_BRACKET elist . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 109
    COMMA                 shift, and go to state 110


state 63

   75 objectdef: LEFT_SQUARE_BRACKET indexed . RIGHT_SQUARE_BRACKET
   77 indexed: indexed . COMMA indexedelem

    RIGHT_SQUARE_BRACKET  shift, and go to state 111
    COMMA                 shift, and go to state 112


state 64

   76 indexed: indexedelem .

    $default  reduce using rule 76 (indexed)


state 65

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   36 term: LEFT_PARENTHESES expr . RIGHT_PARENTHESES

    ADD                shift, and go to state 81
    SUB                shift, and go to state 82
    SHARP              shift, and go to state 83
    SLASH              shift, and go to state 84
    PERCENT            shift, and go to state 85
    EQUAL              shift, and go to state 86
    NOT_EQUAL          shift, and go to state 87
    LESS               shift, and go to state 88
    GREATER            shift, and go to state 89
    GREATER_OR_EQUAL   shift, and go to state 90
    LESS_OR_EQUAL      shift, and go to state 91
    RIGHT_PARENTHESES  shift, and go to state 113
    AND                shift, and go to state 93
    OR                 shift, and go to state 94


state 66

   49 primary: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES
   63 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 114


state 67

   53 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 53 (lvalue)


state 68

  103 ifstmt: IF LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt
  104       | IF LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt ELSE stmt

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 115
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 69

  105 whilestmt: WHILE LEFT_PARENTHESES . expr RIGHT_PARENTHESES stmt

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 116
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 70

  107 forstmt: FOR LEFT_PARENTHESES . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 117
    objectdef   go to state 42
    const       go to state 45


state 71

   91 funcdef: FUNCTION ID . @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 block

    $default  reduce using rule 88 (@11)

    @11  go to state 118


state 72

   87 funcdef: FUNCTION LEFT_PARENTHESES . @9 idlist RIGHT_PARENTHESES @10 block

    $default  reduce using rule 85 (@9)

    @9  go to state 119


state 73

  109 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 109 (returnstmt)


state 74

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
  108 returnstmt: RETURN expr . SEMICOLON

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    SEMICOLON         shift, and go to state 120
    AND               shift, and go to state 93
    OR                shift, and go to state 94


state 75

   11 stmt: BREAK SEMICOLON .

    $default  reduce using rule 11 (stmt)


state 76

   12 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 77

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   38 term: NOT expr .

    $default  reduce using rule 38 (term)


state 78

   52 lvalue: LOCAL_KEYWORD ID .

    $default  reduce using rule 52 (lvalue)


state 79

    0 $accept: program $end .

    $default  accept


state 80

    4 stmtp: stmtp stmt .

    $default  reduce using rule 4 (stmtp)


state 81

   21 expr: expr ADD . expr
   22     | expr ADD . ASSIGNMENT expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    ASSIGNMENT           shift, and go to state 121
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 122
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 82

   23 expr: expr SUB . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 123
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 83

   24 expr: expr SHARP . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 124
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 84

   26 expr: expr SLASH . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 125
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 85

   25 expr: expr PERCENT . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 126
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 86

   31 expr: expr EQUAL . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 127
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 87

   32 expr: expr NOT_EQUAL . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 128
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 88

   29 expr: expr LESS . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 129
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 89

   27 expr: expr GREATER . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 130
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 90

   28 expr: expr GREATER_OR_EQUAL . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 131
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 91

   30 expr: expr LESS_OR_EQUAL . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 132
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 92

    6 stmt: expr SEMICOLON .

    $default  reduce using rule 6 (stmt)


state 93

   33 expr: expr AND . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 133
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 94

   34 expr: expr OR . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 134
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 95

   20 expr: assignexpr @1 .

    $default  reduce using rule 20 (expr)


state 96

   40 term: lvalue PLUS_PLUS .

    $default  reduce using rule 40 (term)


state 97

   42 term: lvalue MINUS_MINUS .

    $default  reduce using rule 42 (term)


state 98

   55 member: lvalue DOT . ID

    ID  shift, and go to state 135


state 99

   45 assignexpr: lvalue @2 . ASSIGNMENT expr

    ASSIGNMENT  shift, and go to state 136


state 100

   57 member: lvalue @3 . LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 137


state 101

   62 call: lvalue @4 . callsuffix

    ID                shift, and go to state 138
    LEFT_PARENTHESES  shift, and go to state 139
    DOUBLE_DOT        shift, and go to state 140

    callsuffix  go to state 141
    normcall    go to state 142
    methodcall  go to state 143


state 102

   59 member: call LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 144
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 103

   60 call: call LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 145
    objectdef   go to state 42
    const       go to state 45


state 104

   58 member: call DOT . ID

    ID  shift, and go to state 146


state 105

   63 call: LEFT_PARENTHESES funcdef . RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES

    RIGHT_PARENTHESES  shift, and go to state 147


state 106

   81 block: LEFT_CURLY_BRACKET @5 RIGHT_CURLY_BRACKET . @6

    $default  reduce using rule 80 (@6)

    @6  go to state 148


state 107

    4 stmtp: stmtp . stmt
   84 block: LEFT_CURLY_BRACKET @7 stmtp . RIGHT_CURLY_BRACKET @8

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    RIGHT_CURLY_BRACKET          shift, and go to state 149
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmt                  go to state 80
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 108

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   78 indexedelem: LEFT_CURLY_BRACKET expr . COLON expr RIGHT_CURLY_BRACKET

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    COLON             shift, and go to state 150
    AND               shift, and go to state 93
    OR                shift, and go to state 94


state 109

   74 objectdef: LEFT_SQUARE_BRACKET elist RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 74 (objectdef)


state 110

   72 elist: elist COMMA . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 151
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 111

   75 objectdef: LEFT_SQUARE_BRACKET indexed RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 75 (objectdef)


state 112

   77 indexed: indexed COMMA . indexedelem

    LEFT_CURLY_BRACKET  shift, and go to state 60

    indexedelem  go to state 152


state 113

   36 term: LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 36 (term)


state 114

   49 primary: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES .
   63 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 153

    $default  reduce using rule 49 (primary)


state 115

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
  103 ifstmt: IF LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt
  104       | IF LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt ELSE stmt

    ADD                shift, and go to state 81
    SUB                shift, and go to state 82
    SHARP              shift, and go to state 83
    SLASH              shift, and go to state 84
    PERCENT            shift, and go to state 85
    EQUAL              shift, and go to state 86
    NOT_EQUAL          shift, and go to state 87
    LESS               shift, and go to state 88
    GREATER            shift, and go to state 89
    GREATER_OR_EQUAL   shift, and go to state 90
    LESS_OR_EQUAL      shift, and go to state 91
    RIGHT_PARENTHESES  shift, and go to state 154
    AND                shift, and go to state 93
    OR                 shift, and go to state 94


state 116

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
  105 whilestmt: WHILE LEFT_PARENTHESES expr . RIGHT_PARENTHESES stmt

    ADD                shift, and go to state 81
    SUB                shift, and go to state 82
    SHARP              shift, and go to state 83
    SLASH              shift, and go to state 84
    PERCENT            shift, and go to state 85
    EQUAL              shift, and go to state 86
    NOT_EQUAL          shift, and go to state 87
    LESS               shift, and go to state 88
    GREATER            shift, and go to state 89
    GREATER_OR_EQUAL   shift, and go to state 90
    LESS_OR_EQUAL      shift, and go to state 91
    RIGHT_PARENTHESES  shift, and go to state 155
    AND                shift, and go to state 93
    OR                 shift, and go to state 94


state 117

   72 elist: elist . COMMA expr
  107 forstmt: FOR LEFT_PARENTHESES elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt

    SEMICOLON  shift, and go to state 156
    COMMA      shift, and go to state 110


state 118

   91 funcdef: FUNCTION ID @11 . LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 block

    LEFT_PARENTHESES  shift, and go to state 157


state 119

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 . idlist RIGHT_PARENTHESES @10 block

    ID  shift, and go to state 158

    $default  reduce using rule 100 (idlist)

    idlist  go to state 159


state 120

  108 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 108 (returnstmt)


state 121

   22 expr: expr ADD ASSIGNMENT . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 160
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 122

   21 expr: expr . ADD expr
   21     | expr ADD expr .
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    $default  reduce using rule 21 (expr)


state 123

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   23     | expr SUB expr .
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    $default  reduce using rule 23 (expr)


state 124

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   24     | expr SHARP expr .
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    $default  reduce using rule 24 (expr)


state 125

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   26     | expr SLASH expr .
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    $default  reduce using rule 26 (expr)


state 126

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   25     | expr PERCENT expr .
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    $default  reduce using rule 25 (expr)


state 127

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   31     | expr EQUAL expr .
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 31 (expr)


state 128

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   32     | expr NOT_EQUAL expr .
   33     | expr . AND expr
   34     | expr . OR expr

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 32 (expr)


state 129

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   29     | expr LESS expr .
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD      shift, and go to state 81
    SUB      shift, and go to state 82
    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    LESS              error (nonassociative)
    GREATER           error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 29 (expr)


state 130

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   27     | expr GREATER expr .
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD      shift, and go to state 81
    SUB      shift, and go to state 82
    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    LESS              error (nonassociative)
    GREATER           error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 27 (expr)


state 131

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   28     | expr GREATER_OR_EQUAL expr .
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD      shift, and go to state 81
    SUB      shift, and go to state 82
    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    LESS              error (nonassociative)
    GREATER           error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 28 (expr)


state 132

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   30     | expr LESS_OR_EQUAL expr .
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD      shift, and go to state 81
    SUB      shift, and go to state 82
    SHARP    shift, and go to state 83
    SLASH    shift, and go to state 84
    PERCENT  shift, and go to state 85

    LESS              error (nonassociative)
    GREATER           error (nonassociative)
    GREATER_OR_EQUAL  error (nonassociative)
    LESS_OR_EQUAL     error (nonassociative)

    $default  reduce using rule 30 (expr)


state 133

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   33     | expr AND expr .
   34     | expr . OR expr

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91

    $default  reduce using rule 33 (expr)


state 134

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   34     | expr OR expr .

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91

    $default  reduce using rule 34 (expr)


state 135

   55 member: lvalue DOT ID .

    $default  reduce using rule 55 (member)


state 136

   45 assignexpr: lvalue @2 ASSIGNMENT . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 161
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 137

   57 member: lvalue @3 LEFT_SQUARE_BRACKET . expr RIGHT_SQUARE_BRACKET

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 162
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 138

   67 normcall: ID . LEFT_PARENTHESES expr RIGHT_PARENTHESES
   68         | ID . LEFT_PARENTHESES elist COMMA expr RIGHT_PARENTHESES
   69         | ID . LEFT_PARENTHESES RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 163


state 139

   66 normcall: LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 164
    objectdef   go to state 42
    const       go to state 45


state 140

   70 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESES elist RIGHT_PARENTHESES

    ID  shift, and go to state 165


state 141

   62 call: lvalue @4 callsuffix .

    $default  reduce using rule 62 (call)


state 142

   64 callsuffix: normcall .

    $default  reduce using rule 64 (callsuffix)


state 143

   65 callsuffix: methodcall .

    $default  reduce using rule 65 (callsuffix)


state 144

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   59 member: call LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    ADD                   shift, and go to state 81
    SUB                   shift, and go to state 82
    SHARP                 shift, and go to state 83
    SLASH                 shift, and go to state 84
    PERCENT               shift, and go to state 85
    EQUAL                 shift, and go to state 86
    NOT_EQUAL             shift, and go to state 87
    LESS                  shift, and go to state 88
    GREATER               shift, and go to state 89
    GREATER_OR_EQUAL      shift, and go to state 90
    LESS_OR_EQUAL         shift, and go to state 91
    RIGHT_SQUARE_BRACKET  shift, and go to state 166
    AND                   shift, and go to state 93
    OR                    shift, and go to state 94


state 145

   60 call: call LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   72 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 167
    COMMA              shift, and go to state 110


state 146

   58 member: call DOT ID .

    $default  reduce using rule 58 (member)


state 147

   63 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 153


state 148

   81 block: LEFT_CURLY_BRACKET @5 RIGHT_CURLY_BRACKET @6 .

    $default  reduce using rule 81 (block)


state 149

   84 block: LEFT_CURLY_BRACKET @7 stmtp RIGHT_CURLY_BRACKET . @8

    $default  reduce using rule 83 (@8)

    @8  go to state 168


state 150

   78 indexedelem: LEFT_CURLY_BRACKET expr COLON . expr RIGHT_CURLY_BRACKET

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 169
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 151

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   72 elist: elist COMMA expr .

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    AND               shift, and go to state 93
    OR                shift, and go to state 94

    $default  reduce using rule 72 (elist)


state 152

   77 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 77 (indexed)


state 153

   63 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 170
    objectdef   go to state 42
    const       go to state 45


state 154

  103 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt
  104       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt ELSE stmt

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmt                  go to state 171
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 155

  105 whilestmt: WHILE LEFT_PARENTHESES expr RIGHT_PARENTHESES . stmt

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmt                  go to state 172
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 156

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 173
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 157

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES . @12 idlist RIGHT_PARENTHESES @13 block

    $default  reduce using rule 89 (@12)

    @12  go to state 174


state 158

   99 idlist: ID . @14 idlist_case_commaid

    $default  reduce using rule 98 (@14)

    @14  go to state 175


state 159

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 idlist . RIGHT_PARENTHESES @10 block

    RIGHT_PARENTHESES  shift, and go to state 176


state 160

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   22     | expr ADD ASSIGNMENT expr .
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    AND               shift, and go to state 93
    OR                shift, and go to state 94

    $default  reduce using rule 22 (expr)


state 161

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   45 assignexpr: lvalue @2 ASSIGNMENT expr .

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    AND               shift, and go to state 93
    OR                shift, and go to state 94

    $default  reduce using rule 45 (assignexpr)


state 162

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   57 member: lvalue @3 LEFT_SQUARE_BRACKET expr . RIGHT_SQUARE_BRACKET

    ADD                   shift, and go to state 81
    SUB                   shift, and go to state 82
    SHARP                 shift, and go to state 83
    SLASH                 shift, and go to state 84
    PERCENT               shift, and go to state 85
    EQUAL                 shift, and go to state 86
    NOT_EQUAL             shift, and go to state 87
    LESS                  shift, and go to state 88
    GREATER               shift, and go to state 89
    GREATER_OR_EQUAL      shift, and go to state 90
    LESS_OR_EQUAL         shift, and go to state 91
    RIGHT_SQUARE_BRACKET  shift, and go to state 177
    AND                   shift, and go to state 93
    OR                    shift, and go to state 94


state 163

   67 normcall: ID LEFT_PARENTHESES . expr RIGHT_PARENTHESES
   68         | ID LEFT_PARENTHESES . elist COMMA expr RIGHT_PARENTHESES
   69         | ID LEFT_PARENTHESES . RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    RIGHT_PARENTHESES    shift, and go to state 178
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 179
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 180
    objectdef   go to state 42
    const       go to state 45


state 164

   66 normcall: LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   72 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 181
    COMMA              shift, and go to state 110


state 165

   70 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESES elist RIGHT_PARENTHESES

    LEFT_PARENTHESES  shift, and go to state 182


state 166

   59 member: call LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 59 (member)


state 167

   60 call: call LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 60 (call)


state 168

   84 block: LEFT_CURLY_BRACKET @7 stmtp RIGHT_CURLY_BRACKET @8 .

    $default  reduce using rule 84 (block)


state 169

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   78 indexedelem: LEFT_CURLY_BRACKET expr COLON expr . RIGHT_CURLY_BRACKET

    ADD                  shift, and go to state 81
    SUB                  shift, and go to state 82
    SHARP                shift, and go to state 83
    SLASH                shift, and go to state 84
    PERCENT              shift, and go to state 85
    EQUAL                shift, and go to state 86
    NOT_EQUAL            shift, and go to state 87
    LESS                 shift, and go to state 88
    GREATER              shift, and go to state 89
    GREATER_OR_EQUAL     shift, and go to state 90
    LESS_OR_EQUAL        shift, and go to state 91
    RIGHT_CURLY_BRACKET  shift, and go to state 183
    AND                  shift, and go to state 93
    OR                   shift, and go to state 94


state 170

   63 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   72 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 184
    COMMA              shift, and go to state 110


state 171

  103 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt .
  104       | IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt . ELSE stmt

    ELSE  shift, and go to state 185

    ELSE      [reduce using rule 103 (ifstmt)]
    $default  reduce using rule 103 (ifstmt)


state 172

  105 whilestmt: WHILE LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt .

    $default  reduce using rule 105 (whilestmt)


state 173

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESES @15 stmt

    ADD               shift, and go to state 81
    SUB               shift, and go to state 82
    SHARP             shift, and go to state 83
    SLASH             shift, and go to state 84
    PERCENT           shift, and go to state 85
    EQUAL             shift, and go to state 86
    NOT_EQUAL         shift, and go to state 87
    LESS              shift, and go to state 88
    GREATER           shift, and go to state 89
    GREATER_OR_EQUAL  shift, and go to state 90
    LESS_OR_EQUAL     shift, and go to state 91
    SEMICOLON         shift, and go to state 186
    AND               shift, and go to state 93
    OR                shift, and go to state 94


state 174

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 . idlist RIGHT_PARENTHESES @13 block

    ID  shift, and go to state 158

    $default  reduce using rule 100 (idlist)

    idlist  go to state 187


state 175

   99 idlist: ID @14 . idlist_case_commaid

    $default  reduce using rule 102 (idlist_case_commaid)

    idlist_case_commaid  go to state 188


state 176

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 idlist RIGHT_PARENTHESES . @10 block

    $default  reduce using rule 86 (@10)

    @10  go to state 189


state 177

   57 member: lvalue @3 LEFT_SQUARE_BRACKET expr RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 57 (member)


state 178

   69 normcall: ID LEFT_PARENTHESES RIGHT_PARENTHESES .

    $default  reduce using rule 69 (normcall)


state 179

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   67 normcall: ID LEFT_PARENTHESES expr . RIGHT_PARENTHESES
   71 elist: expr .

    ADD                shift, and go to state 81
    SUB                shift, and go to state 82
    SHARP              shift, and go to state 83
    SLASH              shift, and go to state 84
    PERCENT            shift, and go to state 85
    EQUAL              shift, and go to state 86
    NOT_EQUAL          shift, and go to state 87
    LESS               shift, and go to state 88
    GREATER            shift, and go to state 89
    GREATER_OR_EQUAL   shift, and go to state 90
    LESS_OR_EQUAL      shift, and go to state 91
    RIGHT_PARENTHESES  shift, and go to state 190
    AND                shift, and go to state 93
    OR                 shift, and go to state 94

    $default  reduce using rule 71 (elist)


state 180

   68 normcall: ID LEFT_PARENTHESES elist . COMMA expr RIGHT_PARENTHESES
   72 elist: elist . COMMA expr

    COMMA  shift, and go to state 191


state 181

   66 normcall: LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 66 (normcall)


state 182

   70 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES . elist RIGHT_PARENTHESES

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 192
    objectdef   go to state 42
    const       go to state 45


state 183

   78 indexedelem: LEFT_CURLY_BRACKET expr COLON expr RIGHT_CURLY_BRACKET .

    $default  reduce using rule 78 (indexedelem)


state 184

   63 call: LEFT_PARENTHESES funcdef RIGHT_PARENTHESES LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 63 (call)


state 185

  104 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE . stmt

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmt                  go to state 193
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 186

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESES @15 stmt

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    $default  reduce using rule 73 (elist)

    expr        go to state 61
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    elist       go to state 194
    objectdef   go to state 42
    const       go to state 45


state 187

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 idlist . RIGHT_PARENTHESES @13 block

    RIGHT_PARENTHESES  shift, and go to state 195


state 188

   99 idlist: ID @14 idlist_case_commaid .
  101 idlist_case_commaid: idlist_case_commaid . COMMA ID

    COMMA  shift, and go to state 196

    $default  reduce using rule 99 (idlist)


state 189

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 idlist RIGHT_PARENTHESES @10 . block

    LEFT_CURLY_BRACKET  shift, and go to state 14

    block  go to state 197


state 190

   67 normcall: ID LEFT_PARENTHESES expr RIGHT_PARENTHESES .

    $default  reduce using rule 67 (normcall)


state 191

   68 normcall: ID LEFT_PARENTHESES elist COMMA . expr RIGHT_PARENTHESES
   72 elist: elist COMMA . expr

    INTEGER              shift, and go to state 2
    REAL                 shift, and go to state 3
    ID                   shift, and go to state 4
    STRING               shift, and go to state 5
    SUB                  shift, and go to state 11
    PLUS_PLUS            shift, and go to state 12
    MINUS_MINUS          shift, and go to state 13
    LEFT_SQUARE_BRACKET  shift, and go to state 15
    LEFT_PARENTHESES     shift, and go to state 16
    DOUBLE_COLON         shift, and go to state 18
    NOT                  shift, and go to state 26
    LOCAL_KEYWORD        shift, and go to state 27
    TRUE                 shift, and go to state 28
    FALSE                shift, and go to state 29
    NIL                  shift, and go to state 30

    expr        go to state 198
    term        go to state 36
    assignexpr  go to state 37
    primary     go to state 38
    lvalue      go to state 39
    member      go to state 40
    call        go to state 41
    objectdef   go to state 42
    const       go to state 45


state 192

   70 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist . RIGHT_PARENTHESES
   72 elist: elist . COMMA expr

    RIGHT_PARENTHESES  shift, and go to state 199
    COMMA              shift, and go to state 110


state 193

  104 ifstmt: IF LEFT_PARENTHESES expr RIGHT_PARENTHESES stmt ELSE stmt .

    $default  reduce using rule 104 (ifstmt)


state 194

   72 elist: elist . COMMA expr
  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESES @15 stmt

    RIGHT_PARENTHESES  shift, and go to state 200
    COMMA              shift, and go to state 110


state 195

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES . @13 block

    $default  reduce using rule 90 (@13)

    @13  go to state 201


state 196

  101 idlist_case_commaid: idlist_case_commaid COMMA . ID

    ID  shift, and go to state 202


state 197

   87 funcdef: FUNCTION LEFT_PARENTHESES @9 idlist RIGHT_PARENTHESES @10 block .

    $default  reduce using rule 87 (funcdef)


state 198

   21 expr: expr . ADD expr
   22     | expr . ADD ASSIGNMENT expr
   23     | expr . SUB expr
   24     | expr . SHARP expr
   25     | expr . PERCENT expr
   26     | expr . SLASH expr
   27     | expr . GREATER expr
   28     | expr . GREATER_OR_EQUAL expr
   29     | expr . LESS expr
   30     | expr . LESS_OR_EQUAL expr
   31     | expr . EQUAL expr
   32     | expr . NOT_EQUAL expr
   33     | expr . AND expr
   34     | expr . OR expr
   68 normcall: ID LEFT_PARENTHESES elist COMMA expr . RIGHT_PARENTHESES
   72 elist: elist COMMA expr .

    ADD                shift, and go to state 81
    SUB                shift, and go to state 82
    SHARP              shift, and go to state 83
    SLASH              shift, and go to state 84
    PERCENT            shift, and go to state 85
    EQUAL              shift, and go to state 86
    NOT_EQUAL          shift, and go to state 87
    LESS               shift, and go to state 88
    GREATER            shift, and go to state 89
    GREATER_OR_EQUAL   shift, and go to state 90
    LESS_OR_EQUAL      shift, and go to state 91
    RIGHT_PARENTHESES  shift, and go to state 203
    AND                shift, and go to state 93
    OR                 shift, and go to state 94

    $default  reduce using rule 72 (elist)


state 199

   70 methodcall: DOUBLE_DOT ID LEFT_PARENTHESES elist RIGHT_PARENTHESES .

    $default  reduce using rule 70 (methodcall)


state 200

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES . @15 stmt

    $default  reduce using rule 106 (@15)

    @15  go to state 204


state 201

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 . block

    LEFT_CURLY_BRACKET  shift, and go to state 14

    block  go to state 205


state 202

  101 idlist_case_commaid: idlist_case_commaid COMMA ID .

    $default  reduce using rule 101 (idlist_case_commaid)


state 203

   68 normcall: ID LEFT_PARENTHESES elist COMMA expr RIGHT_PARENTHESES .

    $default  reduce using rule 68 (normcall)


state 204

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 . stmt

    INTEGER                      shift, and go to state 2
    REAL                         shift, and go to state 3
    ID                           shift, and go to state 4
    STRING                       shift, and go to state 5
    MULTI_COMMENT                shift, and go to state 6
    MULTI_COMMENT_NEVER_CLOSED   shift, and go to state 7
    NESTED_INSIDE_MULTI_COMMENT  shift, and go to state 8
    STRING_NEVER_CLOSED          shift, and go to state 9
    WARNING_STRING               shift, and go to state 10
    SUB                          shift, and go to state 11
    PLUS_PLUS                    shift, and go to state 12
    MINUS_MINUS                  shift, and go to state 13
    LEFT_CURLY_BRACKET           shift, and go to state 14
    LEFT_SQUARE_BRACKET          shift, and go to state 15
    LEFT_PARENTHESES             shift, and go to state 16
    SEMICOLON                    shift, and go to state 17
    DOUBLE_COLON                 shift, and go to state 18
    IF                           shift, and go to state 19
    WHILE                        shift, and go to state 20
    FOR                          shift, and go to state 21
    FUNCTION                     shift, and go to state 22
    RETURN                       shift, and go to state 23
    BREAK                        shift, and go to state 24
    CONTINUE                     shift, and go to state 25
    NOT                          shift, and go to state 26
    LOCAL_KEYWORD                shift, and go to state 27
    TRUE                         shift, and go to state 28
    FALSE                        shift, and go to state 29
    NIL                          shift, and go to state 30
    LINE_COMMENT                 shift, and go to state 31

    stmt                  go to state 206
    expr                  go to state 35
    term                  go to state 36
    assignexpr            go to state 37
    primary               go to state 38
    lvalue                go to state 39
    member                go to state 40
    call                  go to state 41
    objectdef             go to state 42
    block                 go to state 43
    funcdef               go to state 44
    const                 go to state 45
    ifstmt                go to state 46
    whilestmt             go to state 47
    forstmt               go to state 48
    returnstmt            go to state 49
    comment               go to state 50
    warning               go to state 51
    string_comment_error  go to state 52


state 205

   91 funcdef: FUNCTION ID @11 LEFT_PARENTHESES @12 idlist RIGHT_PARENTHESES @13 block .

    $default  reduce using rule 91 (funcdef)


state 206

  107 forstmt: FOR LEFT_PARENTHESES elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESES @15 stmt .

    $default  reduce using rule 107 (forstmt)
